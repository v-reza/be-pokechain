// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  username String
  password String
  profile  Profile?
}

model Profile {
  id            String          @id @default(uuid())
  user          User            @relation(fields: [userId], references: [id])
  userId        String          @unique
  fullName      String?
  picture       String?
  balance       Int?
  tier          Int             @default(1)
  point         Int             @default(0)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  MyPokemon     MyPokemon[]
  MarketPokemon MarketPokemon[]
  Transaction   Transaction[]
  MyItems       MyItems[]
}

model MyItems {
  id        String   @id @default(uuid())
  profile   Profile  @relation(fields: [profileId], references: [id])
  profileId String
  name      String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MyPokemon {
  id        String           @id @default(uuid())
  user      Profile          @relation(fields: [userId], references: [id])
  userId    String           @unique
  detail    MyDetailPokemon?
  isSell    Boolean          @default(false)
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}

model MyDetailPokemon {
  id          String    @id @default(uuid())
  name        String?
  health      Int
  attack      Int
  defense     Int
  level       Int?
  element     String
  MyPokemon   MyPokemon @relation(fields: [myPokemonId], references: [id])
  myPokemonId String    @unique
}

model Pokemon {
  id                 Int                  @id @default(autoincrement())
  name               String
  health             Int
  attack             Int
  defense            Int
  element            String
  frontDefault       String
  frontDefaultGIF    String
  backDefaultGIF     String
  pokemonEvolutionTo PokemonEvolutionTo[]
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
}

model PokemonEvolutionTo {
  id              Int      @id @default(autoincrement())
  Pokemon         Pokemon  @relation(fields: [PokemonId], references: [id])
  PokemonId       Int
  pokemonName     String
  health          Int
  attack          Int
  defense         Int
  level           Int      @default(1)
  element         String
  frontDefault    String
  frontDefaultGIF String
  backDefaultGIF  String
  requiredItem    String?
  qtyRequiredItem Int?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Arena {
  id        String   @id @default(uuid())
  name      String
  point     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MarketPokemon {
  id        String   @id @default(uuid())
  price     Int
  seller    Profile  @relation(fields: [sellerId], references: [id])
  sellerId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id         String  @id @default(uuid())
  user       Profile @relation(fields: [userId], references: [id])
  userId     String
  status     String
  totalPrice Int
  orderId    String
}
