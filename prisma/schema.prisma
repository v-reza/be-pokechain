// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  username String
  password String
  profile  Profile?
}

model Profile {
  id            String          @id @default(uuid())
  user          User            @relation(fields: [userId], references: [id])
  userId        String          @unique
  fullName      String?
  picture       String?
  balance       Int?
  tier          Int             @default(1)
  point         Int             @default(0)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  MyPokemon     MyPokemon[]
  MarketPokemon MarketPokemon[]
  Cart          Cart[]
  Transaction   Transaction[]
}

model MyPokemon {
  id        String   @id @default(uuid())
  user      Profile  @relation(fields: [userId], references: [id])
  userId    String   @unique
  name      String?
  url       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Arena {
  id        String   @id @default(uuid())
  name      String
  point     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Pokemon {
  id        Int   @id @default(autoincrement())
  name      String
  url       String
  price     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MarketPokemon {
  id          String   @id @default(uuid())
  pokemonName String
  price       Int
  url         String
  seller      Profile  @relation(fields: [sellerId], references: [id])
  sellerId    String
  Cart        Cart[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Cart {
  id            String         @id @default(uuid())
  Profile       Profile?       @relation(fields: [profileId], references: [id])
  profileId     String?
  MarketPokemon MarketPokemon? @relation(fields: [marketId], references: [id])
  marketId      String?
  status        String         @default("pending")
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Transaction {
  id         String  @id @default(uuid())
  user       Profile @relation(fields: [userId], references: [id])
  userId     String
  status     String
  totalPrice Int
  orderId    String
}
